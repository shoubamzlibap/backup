# Configuratin file for backup_client.sh script
#

# Local user parameters
# If this script is run as the local user, you can use "id". Otherwise, set as desired.
MY_NAME=$(id -un)
MY_UID=$(id -u)
MY_GID=$(id -g)
MY_HOME=/home/${MY_NAME}

# Paths that are used for saving data.
# Base dir for saving data, if you mount your backup device, this should be the mountpoint.
# E.g. /mnt/backup_server
DATA_MOUNTPOINT="/tmp"

# Subdirectory underneath DATA_MOUNTPOINT, depth can be more then 1.
SUB_DIR="backups"

# Home dir that should be backed up, usually ${MY_HOME}
LOCALHOME=${MY_HOME}/foo  

# samba parameters
# if NO_MOUNT="True", the mounting of the samba share will be skipped
# Usefull for debugging - or when your backup device is local and always mounted.
# ["True"|"False"]
NO_MOUNT="True"

# Check if the backup device is mounted. 
# Usefull if this is usually the case, so no extra mounting is done (NO_MOUNT="True"),
# but you still want to make sure the device is mounted, to prevent mount points from
# being filled up with data. ["True"|"False"]
NO_MOUNT_CHECK="False"

# IP address of the samba server (could also be hostname, if dns works)
SAMBA_IP=192.168.178.41

# Name of the share we are mounting for the backup
SHARE_NAME=backup_${MY_NAME}

# File were credentials to the samba share are stored. The content of the file should be something like
# username=yourusername
# password=yourpassword
CREDENTIAL_FILE=${MY_HOME}/.ds_cred

# A file which lists files and directories that should be excluded from backup
EXCLUDES="${LOCALHOME}/.dobackup.exclude"

# File were status messages are written to. Note this is NOT a log, its just a short
# file which gets displayed to the user to inform about the current status.
STATUS_FILE=${MY_HOME}/.backup_status.txt

# A file where rsync writes its output to. You may need to create this manually and give proper
# permissions if it does not already exist.
LOGFILE="/var/log/backup.log"

# tool to write messages to syslog
LOGGER="logger -t backup[$$]"

# File to write a timestamp of successfull backups to
BACKUP_SUCCESS_FILE=${MY_HOME}/.backup_was_successfull

# Base directory for backup - do not change this
BACKUP_BASE_DIR="${DATA_MOUNTPOINT}/${SUB_DIR}"

# File to write a timestamp of successfull backups to
# This is like BACKUP_SUCCESS_FILE, but needs to be visible for the server, so
# it should reside somewhere on the backup device.
# THIS VARIABLE NEEDS TO BE SYNCHRONIZED BETWEEN CLIENT AND SERVER.
BACKUP_SUCCESS_SERVER_FILE=${BACKUP_BASE_DIR}/.backup_was_successfull

# Directory to sync with - do not change this
BACKUP_DIR="${DATA_MOUNTPOINT}/${SUB_DIR}/daily.0"

